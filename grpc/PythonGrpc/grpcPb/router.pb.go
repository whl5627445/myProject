// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: router.proto

package grpcPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FittingCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FittingCalculationRequest) Reset() {
	*x = FittingCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FittingCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FittingCalculationRequest) ProtoMessage() {}

func (x *FittingCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FittingCalculationRequest.ProtoReflect.Descriptor instead.
func (*FittingCalculationRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{0}
}

func (x *FittingCalculationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FittingCalculationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coefficient []string `protobuf:"bytes,1,rep,name=coefficient,proto3" json:"coefficient,omitempty"`
	Score       string   `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	Status      int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Err         string   `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *FittingCalculationReply) Reset() {
	*x = FittingCalculationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FittingCalculationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FittingCalculationReply) ProtoMessage() {}

func (x *FittingCalculationReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FittingCalculationReply.ProtoReflect.Descriptor instead.
func (*FittingCalculationReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{1}
}

func (x *FittingCalculationReply) GetCoefficient() []string {
	if x != nil {
		return x.Coefficient
	}
	return nil
}

func (x *FittingCalculationReply) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *FittingCalculationReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FittingCalculationReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetProcessStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetProcessStatusRequest) Reset() {
	*x = GetProcessStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusRequest) ProtoMessage() {}

func (x *GetProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{2}
}

func (x *GetProcessStatusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetProcessStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log              string `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Exception        int32  `protobuf:"varint,2,opt,name=exception,proto3" json:"exception,omitempty"`
	Progress         int32  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
	ProcessStartTime string `protobuf:"bytes,4,opt,name=processStartTime,proto3" json:"processStartTime,omitempty"`
	State            string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ProcessRunTime   string `protobuf:"bytes,6,opt,name=processRunTime,proto3" json:"processRunTime,omitempty"`
	ResPath          string `protobuf:"bytes,7,opt,name=resPath,proto3" json:"resPath,omitempty"`
}

func (x *GetProcessStatusReply) Reset() {
	*x = GetProcessStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusReply) ProtoMessage() {}

func (x *GetProcessStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusReply.ProtoReflect.Descriptor instead.
func (*GetProcessStatusReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{3}
}

func (x *GetProcessStatusReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *GetProcessStatusReply) GetException() int32 {
	if x != nil {
		return x.Exception
	}
	return 0
}

func (x *GetProcessStatusReply) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GetProcessStatusReply) GetProcessStartTime() string {
	if x != nil {
		return x.ProcessStartTime
	}
	return ""
}

func (x *GetProcessStatusReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetProcessStatusReply) GetProcessRunTime() string {
	if x != nil {
		return x.ProcessRunTime
	}
	return ""
}

func (x *GetProcessStatusReply) GetResPath() string {
	if x != nil {
		return x.ResPath
	}
	return ""
}

type GetAllProcessNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllProcessNumberRequest) Reset() {
	*x = GetAllProcessNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProcessNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProcessNumberRequest) ProtoMessage() {}

func (x *GetAllProcessNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProcessNumberRequest.ProtoReflect.Descriptor instead.
func (*GetAllProcessNumberRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{4}
}

type GetAllProcessNumberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTasks          int32 `protobuf:"varint,1,opt,name=totalTasks,proto3" json:"totalTasks,omitempty"`
	NumOfRunningProcess int32 `protobuf:"varint,2,opt,name=numOfRunningProcess,proto3" json:"numOfRunningProcess,omitempty"`
	NumOfPendingProcess int32 `protobuf:"varint,3,opt,name=numOfPendingProcess,proto3" json:"numOfPendingProcess,omitempty"`
}

func (x *GetAllProcessNumberReply) Reset() {
	*x = GetAllProcessNumberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProcessNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProcessNumberReply) ProtoMessage() {}

func (x *GetAllProcessNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProcessNumberReply.ProtoReflect.Descriptor instead.
func (*GetAllProcessNumberReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllProcessNumberReply) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *GetAllProcessNumberReply) GetNumOfRunningProcess() int32 {
	if x != nil {
		return x.NumOfRunningProcess
	}
	return 0
}

func (x *GetAllProcessNumberReply) GetNumOfPendingProcess() int32 {
	if x != nil {
		return x.NumOfPendingProcess
	}
	return 0
}

type GetResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Variable string `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
}

func (x *GetResultRequest) Reset() {
	*x = GetResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultRequest) ProtoMessage() {}

func (x *GetResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultRequest.ProtoReflect.Descriptor instead.
func (*GetResultRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{6}
}

func (x *GetResultRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetResultRequest) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

type GetResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log  string    `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Data []float64 `protobuf:"fixed64,2,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResultReply) Reset() {
	*x = GetResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultReply) ProtoMessage() {}

func (x *GetResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultReply.ProtoReflect.Descriptor instead.
func (*GetResultReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{7}
}

func (x *GetResultReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *GetResultReply) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OperationName string `protobuf:"bytes,2,opt,name=operationName,proto3" json:"operationName,omitempty"`
	SimulateType  string `protobuf:"bytes,3,opt,name=simulate_type,json=simulateType,proto3" json:"simulate_type,omitempty"`
}

func (x *ProcessOperationRequest) Reset() {
	*x = ProcessOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessOperationRequest) ProtoMessage() {}

func (x *ProcessOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessOperationRequest.ProtoReflect.Descriptor instead.
func (*ProcessOperationRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessOperationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProcessOperationRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *ProcessOperationRequest) GetSimulateType() string {
	if x != nil {
		return x.SimulateType
	}
	return ""
}

type ProcessOperationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ProcessOperationReply) Reset() {
	*x = ProcessOperationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessOperationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessOperationReply) ProtoMessage() {}

func (x *ProcessOperationReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessOperationReply.ProtoReflect.Descriptor instead.
func (*ProcessOperationReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessOperationReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReadSimulationResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vars       []string `protobuf:"bytes,1,rep,name=Vars,proto3" json:"Vars,omitempty"`
	ResultPath string   `protobuf:"bytes,2,opt,name=resultPath,proto3" json:"resultPath,omitempty"`
}

func (x *ReadSimulationResultRequest) Reset() {
	*x = ReadSimulationResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSimulationResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSimulationResultRequest) ProtoMessage() {}

func (x *ReadSimulationResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSimulationResultRequest.ProtoReflect.Descriptor instead.
func (*ReadSimulationResultRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{10}
}

func (x *ReadSimulationResultRequest) GetVars() []string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *ReadSimulationResultRequest) GetResultPath() string {
	if x != nil {
		return x.ResultPath
	}
	return ""
}

type ReadSimulationResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool                            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data []*ReadSimulationResultReplyEle `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadSimulationResultReply) Reset() {
	*x = ReadSimulationResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSimulationResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSimulationResultReply) ProtoMessage() {}

func (x *ReadSimulationResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSimulationResultReply.ProtoReflect.Descriptor instead.
func (*ReadSimulationResultReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{11}
}

func (x *ReadSimulationResultReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ReadSimulationResultReply) GetData() []*ReadSimulationResultReplyEle {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckVarExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	Path  string   `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *CheckVarExistRequest) Reset() {
	*x = CheckVarExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVarExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVarExistRequest) ProtoMessage() {}

func (x *CheckVarExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVarExistRequest.ProtoReflect.Descriptor instead.
func (*CheckVarExistRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{12}
}

func (x *CheckVarExistRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *CheckVarExistRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CheckVarExistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res map[string]bool `protobuf:"bytes,2,rep,name=Res,proto3" json:"Res,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CheckVarExistReply) Reset() {
	*x = CheckVarExistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVarExistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVarExistReply) ProtoMessage() {}

func (x *CheckVarExistReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVarExistReply.ProtoReflect.Descriptor instead.
func (*CheckVarExistReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{13}
}

func (x *CheckVarExistReply) GetRes() map[string]bool {
	if x != nil {
		return x.Res
	}
	return nil
}

type SubmitTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserSpaceId       string            `protobuf:"bytes,2,opt,name=userSpaceId,proto3" json:"userSpaceId,omitempty"`
	UserName          string            `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	SimulatePackageId string            `protobuf:"bytes,16,opt,name=simulatePackageId,proto3" json:"simulatePackageId,omitempty"`
	SimulateModelName string            `protobuf:"bytes,4,opt,name=simulateModelName,proto3" json:"simulateModelName,omitempty"`
	ResultFilePath    string            `protobuf:"bytes,5,opt,name=resultFilePath,proto3" json:"resultFilePath,omitempty"`
	SimulationPraData map[string]string `protobuf:"bytes,6,rep,name=simulationPraData,proto3" json:"simulationPraData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnvModelData      map[string]string `protobuf:"bytes,7,rep,name=envModelData,proto3" json:"envModelData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SimulateType      string            `protobuf:"bytes,8,opt,name=simulateType,proto3" json:"simulateType,omitempty"`
	// 下面的这些参数只在dy仿真用到
	PackageName     string `protobuf:"bytes,9,opt,name=packageName,proto3" json:"packageName,omitempty"`          //用于创建文件夹
	PackageFilePath string `protobuf:"bytes,10,opt,name=packageFilePath,proto3" json:"packageFilePath,omitempty"` //用户判断是不是系统模型，""表示系统模型
	// 任务类型
	TaskType string `protobuf:"bytes,11,opt,name=taskType,proto3" json:"taskType,omitempty"`
	// 多轮仿真用到的参数
	SingleOrMultiple string                                `protobuf:"bytes,18,opt,name=singleOrMultiple,proto3" json:"singleOrMultiple,omitempty"`
	InputValData     map[string]*SubmitTaskRequestInputObj `protobuf:"bytes,12,rep,name=inputValData,proto3" json:"inputValData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OutputValNames   []string                              `protobuf:"bytes,13,rep,name=outputValNames,proto3" json:"outputValNames,omitempty"`
	PageId           string                                `protobuf:"bytes,15,opt,name=pageId,proto3" json:"pageId,omitempty"`
	MulResultPath    string                                `protobuf:"bytes,17,opt,name=mulResultPath,proto3" json:"mulResultPath,omitempty"`
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{14}
}

func (x *SubmitTaskRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SubmitTaskRequest) GetUserSpaceId() string {
	if x != nil {
		return x.UserSpaceId
	}
	return ""
}

func (x *SubmitTaskRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SubmitTaskRequest) GetSimulatePackageId() string {
	if x != nil {
		return x.SimulatePackageId
	}
	return ""
}

func (x *SubmitTaskRequest) GetSimulateModelName() string {
	if x != nil {
		return x.SimulateModelName
	}
	return ""
}

func (x *SubmitTaskRequest) GetResultFilePath() string {
	if x != nil {
		return x.ResultFilePath
	}
	return ""
}

func (x *SubmitTaskRequest) GetSimulationPraData() map[string]string {
	if x != nil {
		return x.SimulationPraData
	}
	return nil
}

func (x *SubmitTaskRequest) GetEnvModelData() map[string]string {
	if x != nil {
		return x.EnvModelData
	}
	return nil
}

func (x *SubmitTaskRequest) GetSimulateType() string {
	if x != nil {
		return x.SimulateType
	}
	return ""
}

func (x *SubmitTaskRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *SubmitTaskRequest) GetPackageFilePath() string {
	if x != nil {
		return x.PackageFilePath
	}
	return ""
}

func (x *SubmitTaskRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *SubmitTaskRequest) GetSingleOrMultiple() string {
	if x != nil {
		return x.SingleOrMultiple
	}
	return ""
}

func (x *SubmitTaskRequest) GetInputValData() map[string]*SubmitTaskRequestInputObj {
	if x != nil {
		return x.InputValData
	}
	return nil
}

func (x *SubmitTaskRequest) GetOutputValNames() []string {
	if x != nil {
		return x.OutputValNames
	}
	return nil
}

func (x *SubmitTaskRequest) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *SubmitTaskRequest) GetMulResultPath() string {
	if x != nil {
		return x.MulResultPath
	}
	return ""
}

type SubmitTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok  bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SubmitTaskReply) Reset() {
	*x = SubmitTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskReply) ProtoMessage() {}

func (x *SubmitTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskReply.ProtoReflect.Descriptor instead.
func (*SubmitTaskReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{15}
}

func (x *SubmitTaskReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SubmitTaskReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReadSimulationResultReplyEle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row []float64 `protobuf:"fixed64,3,rep,packed,name=row,proto3" json:"row,omitempty"`
}

func (x *ReadSimulationResultReplyEle) Reset() {
	*x = ReadSimulationResultReplyEle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSimulationResultReplyEle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSimulationResultReplyEle) ProtoMessage() {}

func (x *ReadSimulationResultReplyEle) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSimulationResultReplyEle.ProtoReflect.Descriptor instead.
func (*ReadSimulationResultReplyEle) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ReadSimulationResultReplyEle) GetRow() []float64 {
	if x != nil {
		return x.Row
	}
	return nil
}

type SubmitTaskRequestInputObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputObjList []float64 `protobuf:"fixed64,14,rep,packed,name=inputObjList,proto3" json:"inputObjList,omitempty"`
}

func (x *SubmitTaskRequestInputObj) Reset() {
	*x = SubmitTaskRequestInputObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskRequestInputObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequestInputObj) ProtoMessage() {}

func (x *SubmitTaskRequestInputObj) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequestInputObj.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequestInputObj) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{14, 3}
}

func (x *SubmitTaskRequestInputObj) GetInputObjList() []float64 {
	if x != nil {
		return x.InputObjList
	}
	return nil
}

var File_router_proto protoreflect.FileDescriptor

var file_router_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f,
	0x0a, 0x19, 0x46, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x7b, 0x0a, 0x17, 0x46, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x2d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e,
	0x75, 0x6d, 0x4f, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x78, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x51, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x56, 0x61, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x78, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x65, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x17, 0x0a, 0x03, 0x65, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x72,
	0x6f, 0x77, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x72, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x7c, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x72,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x52, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56,
	0x61, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x52, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x89, 0x08, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x57,
	0x0a, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x6e, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x56, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x44, 0x0a, 0x16, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3f, 0x0a, 0x11, 0x45, 0x6e, 0x76, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x5c, 0x0a, 0x11, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x4f, 0x62, 0x6a, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x2e,
	0x0a, 0x08, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x33,
	0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x32, 0xe3, 0x03, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56,
	0x61, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56,
	0x61, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x46,
	0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x46, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x46, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_router_proto_rawDescOnce sync.Once
	file_router_proto_rawDescData = file_router_proto_rawDesc
)

func file_router_proto_rawDescGZIP() []byte {
	file_router_proto_rawDescOnce.Do(func() {
		file_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_router_proto_rawDescData)
	})
	return file_router_proto_rawDescData
}

var file_router_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_router_proto_goTypes = []interface{}{
	(*FittingCalculationRequest)(nil),    // 0: FittingCalculationRequest
	(*FittingCalculationReply)(nil),      // 1: FittingCalculationReply
	(*GetProcessStatusRequest)(nil),      // 2: GetProcessStatusRequest
	(*GetProcessStatusReply)(nil),        // 3: GetProcessStatusReply
	(*GetAllProcessNumberRequest)(nil),   // 4: GetAllProcessNumberRequest
	(*GetAllProcessNumberReply)(nil),     // 5: GetAllProcessNumberReply
	(*GetResultRequest)(nil),             // 6: GetResultRequest
	(*GetResultReply)(nil),               // 7: GetResultReply
	(*ProcessOperationRequest)(nil),      // 8: ProcessOperationRequest
	(*ProcessOperationReply)(nil),        // 9: ProcessOperationReply
	(*ReadSimulationResultRequest)(nil),  // 10: ReadSimulationResultRequest
	(*ReadSimulationResultReply)(nil),    // 11: ReadSimulationResultReply
	(*CheckVarExistRequest)(nil),         // 12: CheckVarExistRequest
	(*CheckVarExistReply)(nil),           // 13: CheckVarExistReply
	(*SubmitTaskRequest)(nil),            // 14: SubmitTaskRequest
	(*SubmitTaskReply)(nil),              // 15: SubmitTaskReply
	(*ReadSimulationResultReplyEle)(nil), // 16: ReadSimulationResultReply.ele
	nil,                                  // 17: CheckVarExistReply.ResEntry
	nil,                                  // 18: SubmitTaskRequest.SimulationPraDataEntry
	nil,                                  // 19: SubmitTaskRequest.EnvModelDataEntry
	nil,                                  // 20: SubmitTaskRequest.InputValDataEntry
	(*SubmitTaskRequestInputObj)(nil),    // 21: SubmitTaskRequest.inputObj
}
var file_router_proto_depIdxs = []int32{
	16, // 0: ReadSimulationResultReply.data:type_name -> ReadSimulationResultReply.ele
	17, // 1: CheckVarExistReply.Res:type_name -> CheckVarExistReply.ResEntry
	18, // 2: SubmitTaskRequest.simulationPraData:type_name -> SubmitTaskRequest.SimulationPraDataEntry
	19, // 3: SubmitTaskRequest.envModelData:type_name -> SubmitTaskRequest.EnvModelDataEntry
	20, // 4: SubmitTaskRequest.inputValData:type_name -> SubmitTaskRequest.InputValDataEntry
	21, // 5: SubmitTaskRequest.InputValDataEntry.value:type_name -> SubmitTaskRequest.inputObj
	2,  // 6: Greeter.GetProcessStatus:input_type -> GetProcessStatusRequest
	6,  // 7: Greeter.GetResult:input_type -> GetResultRequest
	8,  // 8: Greeter.ProcessOperation:input_type -> ProcessOperationRequest
	10, // 9: Greeter.ReadSimulationResult:input_type -> ReadSimulationResultRequest
	12, // 10: Greeter.CheckVarExist:input_type -> CheckVarExistRequest
	14, // 11: Greeter.SubmitTask:input_type -> SubmitTaskRequest
	0,  // 12: Greeter.FittingCalculation:input_type -> FittingCalculationRequest
	3,  // 13: Greeter.GetProcessStatus:output_type -> GetProcessStatusReply
	7,  // 14: Greeter.GetResult:output_type -> GetResultReply
	9,  // 15: Greeter.ProcessOperation:output_type -> ProcessOperationReply
	11, // 16: Greeter.ReadSimulationResult:output_type -> ReadSimulationResultReply
	13, // 17: Greeter.CheckVarExist:output_type -> CheckVarExistReply
	15, // 18: Greeter.SubmitTask:output_type -> SubmitTaskReply
	1,  // 19: Greeter.FittingCalculation:output_type -> FittingCalculationReply
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_router_proto_init() }
func file_router_proto_init() {
	if File_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FittingCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FittingCalculationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProcessNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProcessNumberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessOperationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSimulationResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSimulationResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVarExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVarExistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSimulationResultReplyEle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskRequestInputObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_router_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_router_proto_goTypes,
		DependencyIndexes: file_router_proto_depIdxs,
		MessageInfos:      file_router_proto_msgTypes,
	}.Build()
	File_router_proto = out.File
	file_router_proto_rawDesc = nil
	file_router_proto_goTypes = nil
	file_router_proto_depIdxs = nil
}
