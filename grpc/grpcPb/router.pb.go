// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: router.proto

package grpcPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FmuSimulationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	MoPath         string            `protobuf:"bytes,2,opt,name=moPath,proto3" json:"moPath,omitempty"`
	ClassName      string            `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`
	UserName       string            `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	StartTime      float32           `protobuf:"fixed32,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime       float32           `protobuf:"fixed32,6,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	ResPath        string            `protobuf:"bytes,7,opt,name=resPath,proto3" json:"resPath,omitempty"`
	Params         map[string]string `protobuf:"bytes,8,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OutputInterval float32           `protobuf:"fixed32,9,opt,name=outputInterval,proto3" json:"outputInterval,omitempty"`
	Tolerance      float32           `protobuf:"fixed32,10,opt,name=tolerance,proto3" json:"tolerance,omitempty"`
}

func (x *FmuSimulationRequest) Reset() {
	*x = FmuSimulationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FmuSimulationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FmuSimulationRequest) ProtoMessage() {}

func (x *FmuSimulationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FmuSimulationRequest.ProtoReflect.Descriptor instead.
func (*FmuSimulationRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{0}
}

func (x *FmuSimulationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FmuSimulationRequest) GetMoPath() string {
	if x != nil {
		return x.MoPath
	}
	return ""
}

func (x *FmuSimulationRequest) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *FmuSimulationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FmuSimulationRequest) GetStartTime() float32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FmuSimulationRequest) GetStopTime() float32 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *FmuSimulationRequest) GetResPath() string {
	if x != nil {
		return x.ResPath
	}
	return ""
}

func (x *FmuSimulationRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FmuSimulationRequest) GetOutputInterval() float32 {
	if x != nil {
		return x.OutputInterval
	}
	return 0
}

func (x *FmuSimulationRequest) GetTolerance() float32 {
	if x != nil {
		return x.Tolerance
	}
	return 0
}

type FmuSimulationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log string `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *FmuSimulationReply) Reset() {
	*x = FmuSimulationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FmuSimulationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FmuSimulationReply) ProtoMessage() {}

func (x *FmuSimulationReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FmuSimulationReply.ProtoReflect.Descriptor instead.
func (*FmuSimulationReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{1}
}

func (x *FmuSimulationReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type GetProcessStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetProcessStatusRequest) Reset() {
	*x = GetProcessStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusRequest) ProtoMessage() {}

func (x *GetProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{2}
}

func (x *GetProcessStatusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetProcessStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log              string `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Exception        int32  `protobuf:"varint,2,opt,name=exception,proto3" json:"exception,omitempty"`
	Progress         int32  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
	ProcessStartTime string `protobuf:"bytes,4,opt,name=processStartTime,proto3" json:"processStartTime,omitempty"`
	State            string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ProcessRunTime   string `protobuf:"bytes,6,opt,name=processRunTime,proto3" json:"processRunTime,omitempty"`
	ResPath          string `protobuf:"bytes,7,opt,name=resPath,proto3" json:"resPath,omitempty"`
}

func (x *GetProcessStatusReply) Reset() {
	*x = GetProcessStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusReply) ProtoMessage() {}

func (x *GetProcessStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusReply.ProtoReflect.Descriptor instead.
func (*GetProcessStatusReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{3}
}

func (x *GetProcessStatusReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *GetProcessStatusReply) GetException() int32 {
	if x != nil {
		return x.Exception
	}
	return 0
}

func (x *GetProcessStatusReply) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GetProcessStatusReply) GetProcessStartTime() string {
	if x != nil {
		return x.ProcessStartTime
	}
	return ""
}

func (x *GetProcessStatusReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetProcessStatusReply) GetProcessRunTime() string {
	if x != nil {
		return x.ProcessRunTime
	}
	return ""
}

func (x *GetProcessStatusReply) GetResPath() string {
	if x != nil {
		return x.ResPath
	}
	return ""
}

type GetAllProcessNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllProcessNumberRequest) Reset() {
	*x = GetAllProcessNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProcessNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProcessNumberRequest) ProtoMessage() {}

func (x *GetAllProcessNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProcessNumberRequest.ProtoReflect.Descriptor instead.
func (*GetAllProcessNumberRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{4}
}

type GetAllProcessNumberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTasks          int32 `protobuf:"varint,1,opt,name=totalTasks,proto3" json:"totalTasks,omitempty"`
	NumOfRunningProcess int32 `protobuf:"varint,2,opt,name=numOfRunningProcess,proto3" json:"numOfRunningProcess,omitempty"`
	NumOfPendingProcess int32 `protobuf:"varint,3,opt,name=numOfPendingProcess,proto3" json:"numOfPendingProcess,omitempty"`
}

func (x *GetAllProcessNumberReply) Reset() {
	*x = GetAllProcessNumberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProcessNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProcessNumberReply) ProtoMessage() {}

func (x *GetAllProcessNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProcessNumberReply.ProtoReflect.Descriptor instead.
func (*GetAllProcessNumberReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllProcessNumberReply) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *GetAllProcessNumberReply) GetNumOfRunningProcess() int32 {
	if x != nil {
		return x.NumOfRunningProcess
	}
	return 0
}

func (x *GetAllProcessNumberReply) GetNumOfPendingProcess() int32 {
	if x != nil {
		return x.NumOfPendingProcess
	}
	return 0
}

type GetResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Variable string `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
}

func (x *GetResultRequest) Reset() {
	*x = GetResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultRequest) ProtoMessage() {}

func (x *GetResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultRequest.ProtoReflect.Descriptor instead.
func (*GetResultRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{6}
}

func (x *GetResultRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetResultRequest) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

type GetResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log  string    `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Data []float32 `protobuf:"fixed32,2,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResultReply) Reset() {
	*x = GetResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultReply) ProtoMessage() {}

func (x *GetResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultReply.ProtoReflect.Descriptor instead.
func (*GetResultReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{7}
}

func (x *GetResultReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *GetResultReply) GetData() []float32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OperationName string `protobuf:"bytes,2,opt,name=operationName,proto3" json:"operationName,omitempty"`
}

func (x *ProcessOperationRequest) Reset() {
	*x = ProcessOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessOperationRequest) ProtoMessage() {}

func (x *ProcessOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessOperationRequest.ProtoReflect.Descriptor instead.
func (*ProcessOperationRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessOperationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProcessOperationRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

type ProcessOperationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ProcessOperationReply) Reset() {
	*x = ProcessOperationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessOperationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessOperationReply) ProtoMessage() {}

func (x *ProcessOperationReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessOperationReply.ProtoReflect.Descriptor instead.
func (*ProcessOperationReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessOperationReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SaveFilterResultToCsvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vars        []string `protobuf:"bytes,1,rep,name=Vars,proto3" json:"Vars,omitempty"`
	ResultPath  string   `protobuf:"bytes,2,opt,name=resultPath,proto3" json:"resultPath,omitempty"`
	NewFileName string   `protobuf:"bytes,3,opt,name=newFileName,proto3" json:"newFileName,omitempty"`
}

func (x *SaveFilterResultToCsvRequest) Reset() {
	*x = SaveFilterResultToCsvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFilterResultToCsvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFilterResultToCsvRequest) ProtoMessage() {}

func (x *SaveFilterResultToCsvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFilterResultToCsvRequest.ProtoReflect.Descriptor instead.
func (*SaveFilterResultToCsvRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{10}
}

func (x *SaveFilterResultToCsvRequest) GetVars() []string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *SaveFilterResultToCsvRequest) GetResultPath() string {
	if x != nil {
		return x.ResultPath
	}
	return ""
}

func (x *SaveFilterResultToCsvRequest) GetNewFileName() string {
	if x != nil {
		return x.NewFileName
	}
	return ""
}

type SaveFilterResultToCsvReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *SaveFilterResultToCsvReply) Reset() {
	*x = SaveFilterResultToCsvReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFilterResultToCsvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFilterResultToCsvReply) ProtoMessage() {}

func (x *SaveFilterResultToCsvReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFilterResultToCsvReply.ProtoReflect.Descriptor instead.
func (*SaveFilterResultToCsvReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{11}
}

func (x *SaveFilterResultToCsvReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type MatToCsvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatPath string `protobuf:"bytes,1,opt,name=matPath,proto3" json:"matPath,omitempty"`
}

func (x *MatToCsvRequest) Reset() {
	*x = MatToCsvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatToCsvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatToCsvRequest) ProtoMessage() {}

func (x *MatToCsvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatToCsvRequest.ProtoReflect.Descriptor instead.
func (*MatToCsvRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{12}
}

func (x *MatToCsvRequest) GetMatPath() string {
	if x != nil {
		return x.MatPath
	}
	return ""
}

type MatToCsvReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *MatToCsvReply) Reset() {
	*x = MatToCsvReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatToCsvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatToCsvReply) ProtoMessage() {}

func (x *MatToCsvReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatToCsvReply.ProtoReflect.Descriptor instead.
func (*MatToCsvReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{13}
}

func (x *MatToCsvReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ZarrToCsvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZarrPath string `protobuf:"bytes,1,opt,name=zarrPath,proto3" json:"zarrPath,omitempty"`
}

func (x *ZarrToCsvRequest) Reset() {
	*x = ZarrToCsvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZarrToCsvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZarrToCsvRequest) ProtoMessage() {}

func (x *ZarrToCsvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZarrToCsvRequest.ProtoReflect.Descriptor instead.
func (*ZarrToCsvRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{14}
}

func (x *ZarrToCsvRequest) GetZarrPath() string {
	if x != nil {
		return x.ZarrPath
	}
	return ""
}

type ZarrToCsvReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ZarrToCsvReply) Reset() {
	*x = ZarrToCsvReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZarrToCsvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZarrToCsvReply) ProtoMessage() {}

func (x *ZarrToCsvReply) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZarrToCsvReply.ProtoReflect.Descriptor instead.
func (*ZarrToCsvReply) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{15}
}

func (x *ZarrToCsvReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_router_proto protoreflect.FileDescriptor

var file_router_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x03, 0x0a, 0x14, 0x46, 0x6d, 0x75, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x46, 0x6d, 0x75, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a,
	0x12, 0x46, 0x6d, 0x75, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9e, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x75, 0x6d,
	0x4f, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6e,
	0x75, 0x6d, 0x4f, 0x66, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x17, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x74, 0x0a, 0x1c, 0x53, 0x61, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x43,
	0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x61, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x56, 0x61, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x2c, 0x0a, 0x1a, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x2b, 0x0a,
	0x0f, 0x4d, 0x61, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1f, 0x0a, 0x0d, 0x4d, 0x61,
	0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x2e, 0x0a, 0x10, 0x5a,
	0x61, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x7a, 0x61, 0x72, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x7a, 0x61, 0x72, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x20, 0x0a, 0x0e, 0x5a,
	0x61, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x96, 0x04,
	0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0d, 0x46, 0x6d, 0x75,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x46, 0x6d, 0x75,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x46, 0x6d, 0x75, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x11,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x15,
	0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x6f, 0x43, 0x73, 0x76, 0x12, 0x1d, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x12,
	0x10, 0x2e, 0x4d, 0x61, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x4d, 0x61, 0x74, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x5a, 0x61, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x73, 0x76,
	0x12, 0x11, 0x2e, 0x5a, 0x61, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x5a, 0x61, 0x72, 0x72, 0x54, 0x6f, 0x43, 0x73, 0x76, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_router_proto_rawDescOnce sync.Once
	file_router_proto_rawDescData = file_router_proto_rawDesc
)

func file_router_proto_rawDescGZIP() []byte {
	file_router_proto_rawDescOnce.Do(func() {
		file_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_router_proto_rawDescData)
	})
	return file_router_proto_rawDescData
}

var file_router_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_router_proto_goTypes = []interface{}{
	(*FmuSimulationRequest)(nil),         // 0: FmuSimulationRequest
	(*FmuSimulationReply)(nil),           // 1: FmuSimulationReply
	(*GetProcessStatusRequest)(nil),      // 2: GetProcessStatusRequest
	(*GetProcessStatusReply)(nil),        // 3: GetProcessStatusReply
	(*GetAllProcessNumberRequest)(nil),   // 4: GetAllProcessNumberRequest
	(*GetAllProcessNumberReply)(nil),     // 5: GetAllProcessNumberReply
	(*GetResultRequest)(nil),             // 6: GetResultRequest
	(*GetResultReply)(nil),               // 7: GetResultReply
	(*ProcessOperationRequest)(nil),      // 8: ProcessOperationRequest
	(*ProcessOperationReply)(nil),        // 9: ProcessOperationReply
	(*SaveFilterResultToCsvRequest)(nil), // 10: SaveFilterResultToCsvRequest
	(*SaveFilterResultToCsvReply)(nil),   // 11: SaveFilterResultToCsvReply
	(*MatToCsvRequest)(nil),              // 12: MatToCsvRequest
	(*MatToCsvReply)(nil),                // 13: MatToCsvReply
	(*ZarrToCsvRequest)(nil),             // 14: ZarrToCsvRequest
	(*ZarrToCsvReply)(nil),               // 15: ZarrToCsvReply
	nil,                                  // 16: FmuSimulationRequest.ParamsEntry
}
var file_router_proto_depIdxs = []int32{
	16, // 0: FmuSimulationRequest.params:type_name -> FmuSimulationRequest.ParamsEntry
	0,  // 1: Greeter.FmuSimulation:input_type -> FmuSimulationRequest
	2,  // 2: Greeter.GetProcessStatus:input_type -> GetProcessStatusRequest
	4,  // 3: Greeter.GetAllProcessNumber:input_type -> GetAllProcessNumberRequest
	6,  // 4: Greeter.GetResult:input_type -> GetResultRequest
	8,  // 5: Greeter.ProcessOperation:input_type -> ProcessOperationRequest
	10, // 6: Greeter.SaveFilterResultToCsv:input_type -> SaveFilterResultToCsvRequest
	12, // 7: Greeter.MatToCsv:input_type -> MatToCsvRequest
	14, // 8: Greeter.ZarrToCsv:input_type -> ZarrToCsvRequest
	1,  // 9: Greeter.FmuSimulation:output_type -> FmuSimulationReply
	3,  // 10: Greeter.GetProcessStatus:output_type -> GetProcessStatusReply
	5,  // 11: Greeter.GetAllProcessNumber:output_type -> GetAllProcessNumberReply
	7,  // 12: Greeter.GetResult:output_type -> GetResultReply
	9,  // 13: Greeter.ProcessOperation:output_type -> ProcessOperationReply
	11, // 14: Greeter.SaveFilterResultToCsv:output_type -> SaveFilterResultToCsvReply
	13, // 15: Greeter.MatToCsv:output_type -> MatToCsvReply
	15, // 16: Greeter.ZarrToCsv:output_type -> ZarrToCsvReply
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_router_proto_init() }
func file_router_proto_init() {
	if File_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FmuSimulationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FmuSimulationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProcessNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProcessNumberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessOperationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFilterResultToCsvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFilterResultToCsvReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatToCsvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatToCsvReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZarrToCsvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZarrToCsvReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_router_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_router_proto_goTypes,
		DependencyIndexes: file_router_proto_depIdxs,
		MessageInfos:      file_router_proto_msgTypes,
	}.Build()
	File_router_proto = out.File
	file_router_proto_rawDesc = nil
	file_router_proto_goTypes = nil
	file_router_proto_depIdxs = nil
}
