// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.28.2
// source: ast.proto

package smc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddElement struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClassName      string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`             // 模型名称
	TypeSpecifier  string                 `protobuf:"bytes,2,opt,name=typeSpecifier,proto3" json:"typeSpecifier,omitempty"`     // 模型组件类型
	ElementName    string                 `protobuf:"bytes,3,opt,name=elementName,proto3" json:"elementName,omitempty"`         // 模型组件名称
	Origin         string                 `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`                   // 模型组件所在原点
	Extent         string                 `protobuf:"bytes,5,opt,name=extent,proto3" json:"extent,omitempty"`                   //  模型组件的大小坐标
	Transformation bool                   `protobuf:"varint,13,opt,name=transformation,proto3" json:"transformation,omitempty"` // 暂时用不到
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddElement) Reset() {
	*x = AddElement{}
	mi := &file_ast_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddElement) ProtoMessage() {}

func (x *AddElement) ProtoReflect() protoreflect.Message {
	mi := &file_ast_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddElement.ProtoReflect.Descriptor instead.
func (*AddElement) Descriptor() ([]byte, []int) {
	return file_ast_proto_rawDescGZIP(), []int{0}
}

func (x *AddElement) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *AddElement) GetTypeSpecifier() string {
	if x != nil {
		return x.TypeSpecifier
	}
	return ""
}

func (x *AddElement) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *AddElement) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *AddElement) GetExtent() string {
	if x != nil {
		return x.Extent
	}
	return ""
}

func (x *AddElement) GetTransformation() bool {
	if x != nil {
		return x.Transformation
	}
	return false
}

type SetElementAnnotation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassName     string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`                                                                          // 模型名称
	TypeSpecifier string                 `protobuf:"bytes,2,opt,name=typeSpecifier,proto3" json:"typeSpecifier,omitempty"`                                                                  // 模型组件类
	ElementName   string                 `protobuf:"bytes,3,opt,name=elementName,proto3" json:"elementName,omitempty"`                                                                      // 模型组件名称
	Property      map[string]string      `protobuf:"bytes,11,rep,name=property,proto3" json:"property,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 注解属性映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetElementAnnotation) Reset() {
	*x = SetElementAnnotation{}
	mi := &file_ast_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetElementAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetElementAnnotation) ProtoMessage() {}

func (x *SetElementAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_ast_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetElementAnnotation.ProtoReflect.Descriptor instead.
func (*SetElementAnnotation) Descriptor() ([]byte, []int) {
	return file_ast_proto_rawDescGZIP(), []int{1}
}

func (x *SetElementAnnotation) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *SetElementAnnotation) GetTypeSpecifier() string {
	if x != nil {
		return x.TypeSpecifier
	}
	return ""
}

func (x *SetElementAnnotation) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *SetElementAnnotation) GetProperty() map[string]string {
	if x != nil {
		return x.Property
	}
	return nil
}

type AddConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassName     string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`                                                                          // 模型名称
	Left          string                 `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`                                                                                    // 方程起点
	Right         string                 `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`                                                                                  // 方程终点
	Property      map[string]string      `protobuf:"bytes,11,rep,name=property,proto3" json:"property,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 注解属性映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddConnection) Reset() {
	*x = AddConnection{}
	mi := &file_ast_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConnection) ProtoMessage() {}

func (x *AddConnection) ProtoReflect() protoreflect.Message {
	mi := &file_ast_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConnection.ProtoReflect.Descriptor instead.
func (*AddConnection) Descriptor() ([]byte, []int) {
	return file_ast_proto_rawDescGZIP(), []int{2}
}

func (x *AddConnection) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *AddConnection) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *AddConnection) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

func (x *AddConnection) GetProperty() map[string]string {
	if x != nil {
		return x.Property
	}
	return nil
}

type SetConnectionAnnotation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassName     string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`                                                                          // 模型名称
	Left          string                 `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`                                                                                    // 方程起点
	Right         string                 `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`                                                                                  // 方程终点
	Property      map[string]string      `protobuf:"bytes,11,rep,name=property,proto3" json:"property,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 注解属性映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConnectionAnnotation) Reset() {
	*x = SetConnectionAnnotation{}
	mi := &file_ast_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConnectionAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConnectionAnnotation) ProtoMessage() {}

func (x *SetConnectionAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_ast_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConnectionAnnotation.ProtoReflect.Descriptor instead.
func (*SetConnectionAnnotation) Descriptor() ([]byte, []int) {
	return file_ast_proto_rawDescGZIP(), []int{3}
}

func (x *SetConnectionAnnotation) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *SetConnectionAnnotation) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *SetConnectionAnnotation) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

func (x *SetConnectionAnnotation) GetProperty() map[string]string {
	if x != nil {
		return x.Property
	}
	return nil
}

var File_ast_proto protoreflect.FileDescriptor

var file_ast_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x6d, 0x63,
	0x2e, 0x61, 0x73, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x82, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x6d, 0x63, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x3b, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd6, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6d, 0x63, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x1a, 0x3b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xea, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x6d, 0x63, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a,
	0x3b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x2f, 0x53, 0x4d, 0x43, 0x3b, 0x73, 0x6d, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ast_proto_rawDescOnce sync.Once
	file_ast_proto_rawDescData = file_ast_proto_rawDesc
)

func file_ast_proto_rawDescGZIP() []byte {
	file_ast_proto_rawDescOnce.Do(func() {
		file_ast_proto_rawDescData = protoimpl.X.CompressGZIP(file_ast_proto_rawDescData)
	})
	return file_ast_proto_rawDescData
}

var file_ast_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ast_proto_goTypes = []any{
	(*AddElement)(nil),              // 0: smc.ast.AddElement
	(*SetElementAnnotation)(nil),    // 1: smc.ast.SetElementAnnotation
	(*AddConnection)(nil),           // 2: smc.ast.AddConnection
	(*SetConnectionAnnotation)(nil), // 3: smc.ast.SetConnectionAnnotation
	nil,                             // 4: smc.ast.SetElementAnnotation.PropertyEntry
	nil,                             // 5: smc.ast.AddConnection.PropertyEntry
	nil,                             // 6: smc.ast.SetConnectionAnnotation.PropertyEntry
}
var file_ast_proto_depIdxs = []int32{
	4, // 0: smc.ast.SetElementAnnotation.property:type_name -> smc.ast.SetElementAnnotation.PropertyEntry
	5, // 1: smc.ast.AddConnection.property:type_name -> smc.ast.AddConnection.PropertyEntry
	6, // 2: smc.ast.SetConnectionAnnotation.property:type_name -> smc.ast.SetConnectionAnnotation.PropertyEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ast_proto_init() }
func file_ast_proto_init() {
	if File_ast_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ast_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ast_proto_goTypes,
		DependencyIndexes: file_ast_proto_depIdxs,
		MessageInfos:      file_ast_proto_msgTypes,
	}.Build()
	File_ast_proto = out.File
	file_ast_proto_rawDesc = nil
	file_ast_proto_goTypes = nil
	file_ast_proto_depIdxs = nil
}
